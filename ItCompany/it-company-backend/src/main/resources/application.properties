##server.port=4761
#Reading .env
spring.config.import=file:src/main/resources/.env[.properties]
# Database
spring.datasource.url=jdbc:postgresql://localhost:5432/employee_monitoring
spring.datasource.username=postgres
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
tokenExpiration=900000000
refreshTokenExpiration=7200000
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
#ENV fajl stvari
spring.datasource.password=${DB_PASSWORD}
tokenSecretKey=${JWT_SECRET}
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
hmacSecret=${HMAC_SECRET}
# Database debug
# spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.show-sql = truek
# HTTPS
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# putanja do keystore datoteke
server.ssl.key-store=${KEYSTORE_PATH}
server.ssl.key-store-password=${KEYSTORE_PASSWORD}
server.ssl.key-alias=${KEY_ALIAS}
server.ssl.key-password=${KEY_PASSWORD}
# konfiguracija spring security fr da prihvata HTTPS zahteve
server.ssl.enabled=true
#SMS
#Twilio
twilioAccountSid=${TWILIO_ACCOUNT_SID}
twilioAuthToken=${TWILIO_AUTH_TOKEN}
twilioPhoneNumber=${TWILIO_PHONE_NUMBER}
#Clicksend
clicksendUsername=${CLICKSEND_USERNAME}
clicksendApiKey=${CLICKSEND_API_KEY}
server.port=4430
## CV
cvAesKey=${CV_AES_KEY}
